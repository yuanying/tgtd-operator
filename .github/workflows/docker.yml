name: Publish

on:
  push:
    branches:
      - 'master'
      - 'v*'
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
          else
            echo ::set-output name=version::snapshot
          fi
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=docker_platforms::linux/amd64,linux/arm64,linux/arm/v7
          echo ::set-output name=docker_username::yuanying
          echo ::set-output name=docker_image::yuanying/${{ github.event.repository.name }}
      -
        # https://github.com/crazy-max/ghaction-docker-buildx
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
      -
        # https://github.com/actions/checkout
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker Buildx (no push)
        run: |
          docker buildx build --platform "${{ steps.prepare.outputs.docker_platforms }}" \
            --output "type=image,push=false" \
            --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
            --file Dockerfile .
      -
        name: Docker Login
        if: success()
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${{ steps.prepare.outputs.docker_username }}" --password-stdin
      -
        name: Docker Buildx (push@latest)
        if: success()
        run: |
          docker buildx build --platform "${{ steps.prepare.outputs.docker_platforms }}" \
            --output "type=image,push=true" \
            --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
            --file Dockerfile .
      -
        name: Docker Buildx (push@tag)
        if: success() && startsWith(github.ref, 'refs/tags/v')
        run: |
          docker buildx build --platform "${{ steps.prepare.outputs.docker_platforms }}" \
            --output "type=image,push=true" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
            --file Dockerfile .
      -
        name: Docker Check Manifest
        if: always()
        run: |
          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
      -
        name: Clear
        if: success()
        run: |
          rm -f ${HOME}/.docker/config.json
